    Source code - Code written by a programmer that can be retrieved for use in another program.

    Machine code - The binary language spoken by computers.

    Interpreter - A program that directly executes the instructions written in a programming language.

    Compiler - Translates the human readable instructions you write into machine readable code.

    2GL, 3GL, 4GL - 2nd Generation assembler languages contain human-readable notations but is primarily an intermediary between
machine code and 3rd Gen languages like COBOL and BASIC. 3rd Gen Languages are more user friendly and contain a vast amount of
functions but still require advanced training to be able to program. 4th Gen languages are more geared towards the user
and are somewhat of an advancement on 3rd Gen but tend to be used for programming databases, these include Python, SQL and Ruby,
which tend to be a good starting point for someone to break into programming.

    Executable - An executable is a file type that is packaged with a sequence of instructions, ready to run once given
approval from the system administrator.

    Expressions - A syntax computation composed of one or more constraints, variables, functions and operators.

    Operators and Operands - Behaves similar to a function but generally refers to arithmetic or logical operations.

    Syntax Errors - Refers to documents or code that is written incorrectly in a programming language, usually detected
instantly by the interpreter for corrective adjustments to be made.

    Logical Errors - A program bug that causes a program to operate incorrectly and often produces an undesired output
and harder to detect than syntax errors as they are only typically detectable at runtime, and are best resolved through
iterative testing.